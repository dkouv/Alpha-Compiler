State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 program: $@1 stmt $@2 program
    4        | %empty

    5 stmt: expr SEMI_COLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK SEMI_COLON
   11     | CONTINUE SEMI_COLON
   12     | block
   13     | funcdefstmt
   14     | SEMI_COLON

   15 expr: assignexpr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr MULTIPLICATION expr
   19     | expr DIVISION expr
   20     | expr PERCENTAGE expr
   21     | expr GREATER expr
   22     | expr SMALLER expr
   23     | expr GREATER_EQUAL expr
   24     | expr SMALLER_EQUAL expr
   25     | expr EQUAL_EQUAL expr
   26     | expr NOT_EQUAL expr
   27     | expr AND expr
   28     | expr OR expr
   29     | term

   30 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES
   31     | MINUS expr
   32     | NOT expr
   33     | PLUS_PLUS lvalue
   34     | lvalue PLUS_PLUS
   35     | MINUS_MINUS lvalue
   36     | lvalue MINUS_MINUS
   37     | primary

   38 assignexpr: lvalue EQUAL expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES
   43        | const

   44 lvalue: IDENTIFIER
   45       | LOCAL IDENTIFIER
   46       | COLON_COLON IDENTIFIER
   47       | member

   48 member: lvalue DOT IDENTIFIER
   49       | lvalue LEFT_BRACKET expr RIGHT_BRACKET

   50 $@3: %empty

   51 member: call $@3 DOT IDENTIFIER

   52 $@4: %empty

   53 member: call $@4 LEFT_BRACKET expr RIGHT_BRACKET

   54 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES

   55 $@5: %empty

   56 call: lvalue $@5 callsuffix
   57     | LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES

   61 methodcall: DOT_DOT IDENTIFIER LEFT_PARENTHESES elist RIGHT_PARENTHESES

   62 elist: expr
   63      | elist COMMA expr
   64      | %empty

   65 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   66          | LEFT_BRACKET indexed RIGHT_BRACKET

   67 indexed: indexedelem
   68        | indexedelem COMMA multi_indexedelem

   69 multi_indexedelem: indexed

   70 indexedelem: LEFT_CURLY expr COLON expr RIGHT_CURLY

   71 $@6: %empty

   72 block: LEFT_CURLY $@6 multi_stmt RIGHT_CURLY

   73 multi_stmt: multi_stmt stmt
   74           | %empty

   75 $@7: %empty

   76 $@8: %empty

   77 $@9: %empty

   78 $@10: %empty

   79 $@11: %empty

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 block $@11

   81 $@12: %empty

   82 $@13: %empty

   83 $@14: %empty

   84 $@15: %empty

   85 $@16: %empty

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist $@14 RIGHT_PARENTHESES $@15 block $@16

   87 const: INTEGER
   88      | REAL
   89      | STRING
   90      | NIL
   91      | TRUE
   92      | FALSE

   93 idlist: IDENTIFIER
   94       | idlist COMMA IDENTIFIER
   95       | %empty

   96 $@17: %empty

   97 ifprefix: IF LEFT_PARENTHESES $@17 expr RIGHT_PARENTHESES

   98 elseprefix: ELSE

   99 ifstmt: ifprefix stmt
  100       | ifprefix stmt elseprefix stmt

  101 $@18: %empty

  102 whilestmt: WHILE LEFT_PARENTHESES $@18 whilestmt_continue

  103 $@19: %empty

  104 $@20: %empty

  105 $@21: %empty

  106 whilestmt_continue: expr $@19 RIGHT_PARENTHESES $@20 stmt $@21

  107 $@22: %empty

  108 $@23: %empty

  109 forstmt: FOR LEFT_PARENTHESES $@22 elist SEMI_COLON $@23 forstmt_continue

  110 $@24: %empty

  111 $@25: %empty

  112 $@26: %empty

  113 $@27: %empty

  114 $@28: %empty

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES $@27 stmt $@28

  116 returnstmt: RETURN SEMI_COLON
  117           | RETURN expr SEMI_COLON


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUAL (258) 38
OR (259) 28
AND (260) 27
EQUAL_EQUAL (261) 25
NOT_EQUAL (262) 26
GREATER (263) 21
GREATER_EQUAL (264) 23
SMALLER (265) 22
SMALLER_EQUAL (266) 24
PLUS (267) 16
MINUS (268) 17 31
MULTIPLICATION (269) 18
DIVISION (270) 19
PERCENTAGE (271) 20
NOT (272) 32
PLUS_PLUS (273) 33 34
MINUS_MINUS (274) 35 36
UMINUS (275)
DOT (276) 48 51
DOT_DOT (277) 61
RIGHT_BRACKET (278) 49 53 65 66
LEFT_BRACKET (279) 49 53 65 66
RIGHT_PARENTHESES (280) 30 42 54 57 60 61 80 86 97 106 115
LEFT_PARENTHESES (281) 30 42 54 57 60 61 80 86 97 102 109
IF (282) 97
ELSE (283) 98
WHILE (284) 102
FOR (285) 109
FUNCTION (286) 80 86
RETURN (287) 116 117
LOCAL (288) 45
TRUE (289) 91
FALSE (290) 92
NIL (291) 90
BREAK (292) 10
CONTINUE (293) 11
RIGHT_CURLY (294) 70 72
LEFT_CURLY (295) 70 72
SEMI_COLON (296) 5 10 11 14 109 115 116 117
COMMA (297) 63 68 94
COLON (298) 70
COLON_COLON (299) 46
IDENTIFIER (300) 44 45 46 48 51 61 80 93 94
STRING (301) 89
REAL (302) 88
INTEGER (303) 87


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 3 4, on right: 0 3
$@1 (51)
    on left: 1, on right: 3
$@2 (52)
    on left: 2, on right: 3
stmt (53)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 73 99 100 106 115
expr (54)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 38 49 53 62 63
    70 97 106 115 117
term (55)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (56)
    on left: 38, on right: 15
primary (57)
    on left: 39 40 41 42 43, on right: 37
lvalue (58)
    on left: 44 45 46 47, on right: 33 34 35 36 38 39 48 49 56
member (59)
    on left: 48 49 51 53, on right: 47
$@3 (60)
    on left: 50, on right: 51
$@4 (61)
    on left: 52, on right: 53
call (62)
    on left: 54 56 57, on right: 40 51 53 54
$@5 (63)
    on left: 55, on right: 56
callsuffix (64)
    on left: 58 59, on right: 56
normcall (65)
    on left: 60, on right: 58
methodcall (66)
    on left: 61, on right: 59
elist (67)
    on left: 62 63 64, on right: 54 57 60 61 63 65 109 115
objectdef (68)
    on left: 65 66, on right: 41
indexed (69)
    on left: 67 68, on right: 66 69
multi_indexedelem (70)
    on left: 69, on right: 68
indexedelem (71)
    on left: 70, on right: 67 68
block (72)
    on left: 72, on right: 12 80 86
$@6 (73)
    on left: 71, on right: 72
multi_stmt (74)
    on left: 73 74, on right: 72 73
funcdefstmt (75)
    on left: 80 86, on right: 13 42 57
$@7 (76)
    on left: 75, on right: 80
$@8 (77)
    on left: 76, on right: 80
$@9 (78)
    on left: 77, on right: 80
$@10 (79)
    on left: 78, on right: 80
$@11 (80)
    on left: 79, on right: 80
$@12 (81)
    on left: 81, on right: 86
$@13 (82)
    on left: 82, on right: 86
$@14 (83)
    on left: 83, on right: 86
$@15 (84)
    on left: 84, on right: 86
$@16 (85)
    on left: 85, on right: 86
const (86)
    on left: 87 88 89 90 91 92, on right: 43
idlist (87)
    on left: 93 94 95, on right: 80 86 94
ifprefix (88)
    on left: 97, on right: 99 100
$@17 (89)
    on left: 96, on right: 97
elseprefix (90)
    on left: 98, on right: 100
ifstmt (91)
    on left: 99 100, on right: 6
whilestmt (92)
    on left: 102, on right: 7
$@18 (93)
    on left: 101, on right: 102
whilestmt_continue (94)
    on left: 106, on right: 102
$@19 (95)
    on left: 103, on right: 106
$@20 (96)
    on left: 104, on right: 106
$@21 (97)
    on left: 105, on right: 106
forstmt (98)
    on left: 109, on right: 8
$@22 (99)
    on left: 107, on right: 109
$@23 (100)
    on left: 108, on right: 109
forstmt_continue (101)
    on left: 115, on right: 109
$@24 (102)
    on left: 110, on right: 115
$@25 (103)
    on left: 111, on right: 115
$@26 (104)
    on left: 112, on right: 115
$@27 (105)
    on left: 113, on right: 115
$@28 (106)
    on left: 114, on right: 115
returnstmt (107)
    on left: 116 117, on right: 9


State 0

    0 $accept: . program $end

    $end      reduce using rule 4 (program)
    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    3 program: $@1 . stmt $@2 program

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    BREAK             shift, and go to state 19
    CONTINUE          shift, and go to state 20
    LEFT_CURLY        shift, and go to state 21
    SEMI_COLON        shift, and go to state 22
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    stmt         go to state 28
    expr         go to state 29
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    block        go to state 37
    funcdefstmt  go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmt       go to state 41
    whilestmt    go to state 42
    forstmt      go to state 43
    returnstmt   go to state 44


State 3

    0 $accept: program $end .

    $default  accept


State 4

   31 term: MINUS . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 45
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 5

   32 term: NOT . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 46
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 6

   33 term: PLUS_PLUS . lvalue

    LEFT_PARENTHESES  shift, and go to state 47
    LOCAL             shift, and go to state 15
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24

    lvalue  go to state 48
    member  go to state 34
    call    go to state 49


State 7

   35 term: MINUS_MINUS . lvalue

    LEFT_PARENTHESES  shift, and go to state 47
    LOCAL             shift, and go to state 15
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24

    lvalue  go to state 50
    member  go to state 34
    call    go to state 49


State 8

   65 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   66          | LEFT_BRACKET . indexed RIGHT_BRACKET

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_CURLY        shift, and go to state 51
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr         go to state 52
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 53
    objectdef    go to state 36
    indexed      go to state 54
    indexedelem  go to state 55
    const        go to state 39


State 9

   30 term: LEFT_PARENTHESES . expr RIGHT_PARENTHESES
   42 primary: LEFT_PARENTHESES . funcdefstmt RIGHT_PARENTHESES
   57 call: LEFT_PARENTHESES . funcdefstmt RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    FUNCTION          shift, and go to state 13
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr         go to state 56
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    funcdefstmt  go to state 57
    const        go to state 39


State 10

   97 ifprefix: IF . LEFT_PARENTHESES $@17 expr RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 58


State 11

  102 whilestmt: WHILE . LEFT_PARENTHESES $@18 whilestmt_continue

    LEFT_PARENTHESES  shift, and go to state 59


State 12

  109 forstmt: FOR . LEFT_PARENTHESES $@22 elist SEMI_COLON $@23 forstmt_continue

    LEFT_PARENTHESES  shift, and go to state 60


State 13

   80 funcdefstmt: FUNCTION . IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 block $@11
   86            | FUNCTION . LEFT_PARENTHESES $@12 $@13 idlist $@14 RIGHT_PARENTHESES $@15 block $@16

    LEFT_PARENTHESES  shift, and go to state 61
    IDENTIFIER        shift, and go to state 62


State 14

  116 returnstmt: RETURN . SEMI_COLON
  117           | RETURN . expr SEMI_COLON

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    SEMI_COLON        shift, and go to state 63
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 64
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 15

   45 lvalue: LOCAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 65


State 16

   91 const: TRUE .

    $default  reduce using rule 91 (const)


State 17

   92 const: FALSE .

    $default  reduce using rule 92 (const)


State 18

   90 const: NIL .

    $default  reduce using rule 90 (const)


State 19

   10 stmt: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 66


State 20

   11 stmt: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 67


State 21

   72 block: LEFT_CURLY . $@6 multi_stmt RIGHT_CURLY

    $default  reduce using rule 71 ($@6)

    $@6  go to state 68


State 22

   14 stmt: SEMI_COLON .

    $default  reduce using rule 14 (stmt)


State 23

   46 lvalue: COLON_COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


State 24

   44 lvalue: IDENTIFIER .

    $default  reduce using rule 44 (lvalue)


State 25

   89 const: STRING .

    $default  reduce using rule 89 (const)


State 26

   88 const: REAL .

    $default  reduce using rule 88 (const)


State 27

   87 const: INTEGER .

    $default  reduce using rule 87 (const)


State 28

    3 program: $@1 stmt . $@2 program

    $default  reduce using rule 2 ($@2)

    $@2  go to state 70


State 29

    5 stmt: expr . SEMI_COLON
   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83
    SEMI_COLON      shift, and go to state 84


State 30

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 31

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 32

   37 term: primary .

    $default  reduce using rule 37 (term)


State 33

   34 term: lvalue . PLUS_PLUS
   36     | lvalue . MINUS_MINUS
   38 assignexpr: lvalue . EQUAL expr
   39 primary: lvalue .
   48 member: lvalue . DOT IDENTIFIER
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue . $@5 callsuffix

    EQUAL         shift, and go to state 85
    PLUS_PLUS     shift, and go to state 86
    MINUS_MINUS   shift, and go to state 87
    DOT           shift, and go to state 88
    LEFT_BRACKET  shift, and go to state 89

    DOT_DOT           reduce using rule 55 ($@5)
    LEFT_PARENTHESES  reduce using rule 55 ($@5)
    $default          reduce using rule 39 (primary)

    $@5  go to state 90


State 34

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 35

   40 primary: call .
   51 member: call . $@3 DOT IDENTIFIER
   53       | call . $@4 LEFT_BRACKET expr RIGHT_BRACKET
   54 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 91

    DOT           reduce using rule 50 ($@3)
    LEFT_BRACKET  reduce using rule 52 ($@4)
    $default      reduce using rule 40 (primary)

    $@3  go to state 92
    $@4  go to state 93


State 36

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 37

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 38

   13 stmt: funcdefstmt .

    $default  reduce using rule 13 (stmt)


State 39

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 40

   99 ifstmt: ifprefix . stmt
  100       | ifprefix . stmt elseprefix stmt

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    BREAK             shift, and go to state 19
    CONTINUE          shift, and go to state 20
    LEFT_CURLY        shift, and go to state 21
    SEMI_COLON        shift, and go to state 22
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    stmt         go to state 94
    expr         go to state 29
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    block        go to state 37
    funcdefstmt  go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmt       go to state 41
    whilestmt    go to state 42
    forstmt      go to state 43
    returnstmt   go to state 44


State 41

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 42

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 43

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 44

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 45

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   31 term: MINUS expr .

    $default  reduce using rule 31 (term)


State 46

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   32 term: NOT expr .

    $default  reduce using rule 32 (term)


State 47

   57 call: LEFT_PARENTHESES . funcdefstmt RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    FUNCTION  shift, and go to state 13

    funcdefstmt  go to state 95


State 48

   33 term: PLUS_PLUS lvalue .
   48 member: lvalue . DOT IDENTIFIER
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue . $@5 callsuffix

    DOT           shift, and go to state 88
    LEFT_BRACKET  shift, and go to state 89

    DOT_DOT           reduce using rule 55 ($@5)
    LEFT_PARENTHESES  reduce using rule 55 ($@5)
    $default          reduce using rule 33 (term)

    $@5  go to state 90


State 49

   51 member: call . $@3 DOT IDENTIFIER
   53       | call . $@4 LEFT_BRACKET expr RIGHT_BRACKET
   54 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 91

    LEFT_BRACKET  reduce using rule 52 ($@4)
    $default      reduce using rule 50 ($@3)

    $@3  go to state 92
    $@4  go to state 93


State 50

   35 term: MINUS_MINUS lvalue .
   48 member: lvalue . DOT IDENTIFIER
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue . $@5 callsuffix

    DOT           shift, and go to state 88
    LEFT_BRACKET  shift, and go to state 89

    DOT_DOT           reduce using rule 55 ($@5)
    LEFT_PARENTHESES  reduce using rule 55 ($@5)
    $default          reduce using rule 35 (term)

    $@5  go to state 90


State 51

   70 indexedelem: LEFT_CURLY . expr COLON expr RIGHT_CURLY

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 96
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 52

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   62 elist: expr .

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 62 (elist)


State 53

   63 elist: elist . COMMA expr
   65 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 97
    COMMA          shift, and go to state 98


State 54

   66 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 99


State 55

   67 indexed: indexedelem .
   68        | indexedelem . COMMA multi_indexedelem

    COMMA  shift, and go to state 100

    $default  reduce using rule 67 (indexed)


State 56

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   30 term: LEFT_PARENTHESES expr . RIGHT_PARENTHESES

    OR                 shift, and go to state 71
    AND                shift, and go to state 72
    EQUAL_EQUAL        shift, and go to state 73
    NOT_EQUAL          shift, and go to state 74
    GREATER            shift, and go to state 75
    GREATER_EQUAL      shift, and go to state 76
    SMALLER            shift, and go to state 77
    SMALLER_EQUAL      shift, and go to state 78
    PLUS               shift, and go to state 79
    MINUS              shift, and go to state 80
    MULTIPLICATION     shift, and go to state 81
    DIVISION           shift, and go to state 82
    PERCENTAGE         shift, and go to state 83
    RIGHT_PARENTHESES  shift, and go to state 101


State 57

   42 primary: LEFT_PARENTHESES funcdefstmt . RIGHT_PARENTHESES
   57 call: LEFT_PARENTHESES funcdefstmt . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 102


State 58

   97 ifprefix: IF LEFT_PARENTHESES . $@17 expr RIGHT_PARENTHESES

    $default  reduce using rule 96 ($@17)

    $@17  go to state 103


State 59

  102 whilestmt: WHILE LEFT_PARENTHESES . $@18 whilestmt_continue

    $default  reduce using rule 101 ($@18)

    $@18  go to state 104


State 60

  109 forstmt: FOR LEFT_PARENTHESES . $@22 elist SEMI_COLON $@23 forstmt_continue

    $default  reduce using rule 107 ($@22)

    $@22  go to state 105


State 61

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES . $@12 $@13 idlist $@14 RIGHT_PARENTHESES $@15 block $@16

    $default  reduce using rule 81 ($@12)

    $@12  go to state 106


State 62

   80 funcdefstmt: FUNCTION IDENTIFIER . $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 block $@11

    $default  reduce using rule 75 ($@7)

    $@7  go to state 107


State 63

  116 returnstmt: RETURN SEMI_COLON .

    $default  reduce using rule 116 (returnstmt)


State 64

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
  117 returnstmt: RETURN expr . SEMI_COLON

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83
    SEMI_COLON      shift, and go to state 108


State 65

   45 lvalue: LOCAL IDENTIFIER .

    $default  reduce using rule 45 (lvalue)


State 66

   10 stmt: BREAK SEMI_COLON .

    $default  reduce using rule 10 (stmt)


State 67

   11 stmt: CONTINUE SEMI_COLON .

    $default  reduce using rule 11 (stmt)


State 68

   72 block: LEFT_CURLY $@6 . multi_stmt RIGHT_CURLY

    $default  reduce using rule 74 (multi_stmt)

    multi_stmt  go to state 109


State 69

   46 lvalue: COLON_COLON IDENTIFIER .

    $default  reduce using rule 46 (lvalue)


State 70

    3 program: $@1 stmt $@2 . program

    $end      reduce using rule 4 (program)
    $default  reduce using rule 1 ($@1)

    program  go to state 110
    $@1      go to state 2


State 71

   28 expr: expr OR . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 111
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 72

   27 expr: expr AND . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 112
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 73

   25 expr: expr EQUAL_EQUAL . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 113
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 74

   26 expr: expr NOT_EQUAL . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 114
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 75

   21 expr: expr GREATER . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 115
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 76

   23 expr: expr GREATER_EQUAL . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 116
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 77

   22 expr: expr SMALLER . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 117
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 78

   24 expr: expr SMALLER_EQUAL . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 118
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 79

   16 expr: expr PLUS . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 119
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 80

   17 expr: expr MINUS . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 120
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 81

   18 expr: expr MULTIPLICATION . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 82

   19 expr: expr DIVISION . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 83

   20 expr: expr PERCENTAGE . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 84

    5 stmt: expr SEMI_COLON .

    $default  reduce using rule 5 (stmt)


State 85

   38 assignexpr: lvalue EQUAL . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 86

   34 term: lvalue PLUS_PLUS .

    $default  reduce using rule 34 (term)


State 87

   36 term: lvalue MINUS_MINUS .

    $default  reduce using rule 36 (term)


State 88

   48 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 125


State 89

   49 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 90

   56 call: lvalue $@5 . callsuffix

    DOT_DOT           shift, and go to state 127
    LEFT_PARENTHESES  shift, and go to state 128

    callsuffix  go to state 129
    normcall    go to state 130
    methodcall  go to state 131


State 91

   54 call: call LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 52
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 132
    objectdef   go to state 36
    const       go to state 39


State 92

   51 member: call $@3 . DOT IDENTIFIER

    DOT  shift, and go to state 133


State 93

   53 member: call $@4 . LEFT_BRACKET expr RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 134


State 94

   99 ifstmt: ifprefix stmt .
  100       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 135

    ELSE      [reduce using rule 99 (ifstmt)]
    $default  reduce using rule 99 (ifstmt)

    elseprefix  go to state 136


State 95

   57 call: LEFT_PARENTHESES funcdefstmt . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 137


State 96

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   70 indexedelem: LEFT_CURLY expr . COLON expr RIGHT_CURLY

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83
    COLON           shift, and go to state 138


State 97

   65 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 65 (objectdef)


State 98

   63 elist: elist COMMA . expr

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 139
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 99

   66 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 66 (objectdef)


State 100

   68 indexed: indexedelem COMMA . multi_indexedelem

    LEFT_CURLY  shift, and go to state 51

    indexed            go to state 140
    multi_indexedelem  go to state 141
    indexedelem        go to state 55


State 101

   30 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 30 (term)


State 102

   42 primary: LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES .
   57 call: LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 142

    $default  reduce using rule 42 (primary)


State 103

   97 ifprefix: IF LEFT_PARENTHESES $@17 . expr RIGHT_PARENTHESES

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 143
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 104

  102 whilestmt: WHILE LEFT_PARENTHESES $@18 . whilestmt_continue

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr                go to state 144
    term                go to state 30
    assignexpr          go to state 31
    primary             go to state 32
    lvalue              go to state 33
    member              go to state 34
    call                go to state 35
    objectdef           go to state 36
    const               go to state 39
    whilestmt_continue  go to state 145


State 105

  109 forstmt: FOR LEFT_PARENTHESES $@22 . elist SEMI_COLON $@23 forstmt_continue

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 52
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 146
    objectdef   go to state 36
    const       go to state 39


State 106

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 . $@13 idlist $@14 RIGHT_PARENTHESES $@15 block $@16

    $default  reduce using rule 82 ($@13)

    $@13  go to state 147


State 107

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 . LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 block $@11

    LEFT_PARENTHESES  shift, and go to state 148


State 108

  117 returnstmt: RETURN expr SEMI_COLON .

    $default  reduce using rule 117 (returnstmt)


State 109

   72 block: LEFT_CURLY $@6 multi_stmt . RIGHT_CURLY
   73 multi_stmt: multi_stmt . stmt

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    BREAK             shift, and go to state 19
    CONTINUE          shift, and go to state 20
    RIGHT_CURLY       shift, and go to state 149
    LEFT_CURLY        shift, and go to state 21
    SEMI_COLON        shift, and go to state 22
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    stmt         go to state 150
    expr         go to state 29
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    block        go to state 37
    funcdefstmt  go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmt       go to state 41
    whilestmt    go to state 42
    forstmt      go to state 43
    returnstmt   go to state 44


State 110

    3 program: $@1 stmt $@2 program .

    $default  reduce using rule 3 (program)


State 111

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .

    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 28 (expr)


State 112

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr

    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 27 (expr)


State 113

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   25     | expr EQUAL_EQUAL expr .
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    EQUAL_EQUAL  error (nonassociative)
    NOT_EQUAL    error (nonassociative)

    $default  reduce using rule 25 (expr)


State 114

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   26     | expr NOT_EQUAL expr .
   27     | expr . AND expr
   28     | expr . OR expr

    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    EQUAL_EQUAL  error (nonassociative)
    NOT_EQUAL    error (nonassociative)

    $default  reduce using rule 26 (expr)


State 115

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   21     | expr GREATER expr .
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    SMALLER        error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 116

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   23     | expr GREATER_EQUAL expr .
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    SMALLER        error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 117

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   22     | expr SMALLER expr .
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    SMALLER        error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 118

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   24     | expr SMALLER_EQUAL expr .
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    GREATER        error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    SMALLER        error (nonassociative)
    SMALLER_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 119

   16 expr: expr . PLUS expr
   16     | expr PLUS expr .
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 16 (expr)


State 120

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   17     | expr MINUS expr .
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 17 (expr)


State 121

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   18     | expr MULTIPLICATION expr .
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 122

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   19     | expr DIVISION expr .
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 123

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   20     | expr PERCENTAGE expr .
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 124

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   38 assignexpr: lvalue EQUAL expr .

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 38 (assignexpr)


State 125

   48 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 48 (member)


State 126

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   49 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83
    RIGHT_BRACKET   shift, and go to state 151


State 127

   61 methodcall: DOT_DOT . IDENTIFIER LEFT_PARENTHESES elist RIGHT_PARENTHESES

    IDENTIFIER  shift, and go to state 152


State 128

   60 normcall: LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 52
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 153
    objectdef   go to state 36
    const       go to state 39


State 129

   56 call: lvalue $@5 callsuffix .

    $default  reduce using rule 56 (call)


State 130

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 131

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 132

   54 call: call LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   63 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 154
    COMMA              shift, and go to state 98


State 133

   51 member: call $@3 DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 155


State 134

   53 member: call $@4 LEFT_BRACKET . expr RIGHT_BRACKET

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 156
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 135

   98 elseprefix: ELSE .

    $default  reduce using rule 98 (elseprefix)


State 136

  100 ifstmt: ifprefix stmt elseprefix . stmt

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    BREAK             shift, and go to state 19
    CONTINUE          shift, and go to state 20
    LEFT_CURLY        shift, and go to state 21
    SEMI_COLON        shift, and go to state 22
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    stmt         go to state 157
    expr         go to state 29
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    block        go to state 37
    funcdefstmt  go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmt       go to state 41
    whilestmt    go to state 42
    forstmt      go to state 43
    returnstmt   go to state 44


State 137

   57 call: LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 142


State 138

   70 indexedelem: LEFT_CURLY expr COLON . expr RIGHT_CURLY

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr        go to state 158
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 139

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   63 elist: elist COMMA expr .

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 63 (elist)


State 140

   69 multi_indexedelem: indexed .

    $default  reduce using rule 69 (multi_indexedelem)


State 141

   68 indexed: indexedelem COMMA multi_indexedelem .

    $default  reduce using rule 68 (indexed)


State 142

   57 call: LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 52
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 159
    objectdef   go to state 36
    const       go to state 39


State 143

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   97 ifprefix: IF LEFT_PARENTHESES $@17 expr . RIGHT_PARENTHESES

    OR                 shift, and go to state 71
    AND                shift, and go to state 72
    EQUAL_EQUAL        shift, and go to state 73
    NOT_EQUAL          shift, and go to state 74
    GREATER            shift, and go to state 75
    GREATER_EQUAL      shift, and go to state 76
    SMALLER            shift, and go to state 77
    SMALLER_EQUAL      shift, and go to state 78
    PLUS               shift, and go to state 79
    MINUS              shift, and go to state 80
    MULTIPLICATION     shift, and go to state 81
    DIVISION           shift, and go to state 82
    PERCENTAGE         shift, and go to state 83
    RIGHT_PARENTHESES  shift, and go to state 160


State 144

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
  106 whilestmt_continue: expr . $@19 RIGHT_PARENTHESES $@20 stmt $@21

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 103 ($@19)

    $@19  go to state 161


State 145

  102 whilestmt: WHILE LEFT_PARENTHESES $@18 whilestmt_continue .

    $default  reduce using rule 102 (whilestmt)


State 146

   63 elist: elist . COMMA expr
  109 forstmt: FOR LEFT_PARENTHESES $@22 elist . SEMI_COLON $@23 forstmt_continue

    SEMI_COLON  shift, and go to state 162
    COMMA       shift, and go to state 98


State 147

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 . idlist $@14 RIGHT_PARENTHESES $@15 block $@16

    IDENTIFIER  shift, and go to state 163

    $default  reduce using rule 95 (idlist)

    idlist  go to state 164


State 148

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES . $@8 idlist $@9 RIGHT_PARENTHESES $@10 block $@11

    $default  reduce using rule 76 ($@8)

    $@8  go to state 165


State 149

   72 block: LEFT_CURLY $@6 multi_stmt RIGHT_CURLY .

    $default  reduce using rule 72 (block)


State 150

   73 multi_stmt: multi_stmt stmt .

    $default  reduce using rule 73 (multi_stmt)


State 151

   49 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 49 (member)


State 152

   61 methodcall: DOT_DOT IDENTIFIER . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 166


State 153

   60 normcall: LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   63 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 167
    COMMA              shift, and go to state 98


State 154

   54 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 54 (call)


State 155

   51 member: call $@3 DOT IDENTIFIER .

    $default  reduce using rule 51 (member)


State 156

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   53 member: call $@4 LEFT_BRACKET expr . RIGHT_BRACKET

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83
    RIGHT_BRACKET   shift, and go to state 168


State 157

  100 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 100 (ifstmt)


State 158

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   70 indexedelem: LEFT_CURLY expr COLON expr . RIGHT_CURLY

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83
    RIGHT_CURLY     shift, and go to state 169


State 159

   57 call: LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   63 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 170
    COMMA              shift, and go to state 98


State 160

   97 ifprefix: IF LEFT_PARENTHESES $@17 expr RIGHT_PARENTHESES .

    $default  reduce using rule 97 (ifprefix)


State 161

  106 whilestmt_continue: expr $@19 . RIGHT_PARENTHESES $@20 stmt $@21

    RIGHT_PARENTHESES  shift, and go to state 171


State 162

  109 forstmt: FOR LEFT_PARENTHESES $@22 elist SEMI_COLON . $@23 forstmt_continue

    $default  reduce using rule 108 ($@23)

    $@23  go to state 172


State 163

   93 idlist: IDENTIFIER .

    $default  reduce using rule 93 (idlist)


State 164

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist . $@14 RIGHT_PARENTHESES $@15 block $@16
   94 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 173

    $default  reduce using rule 83 ($@14)

    $@14  go to state 174


State 165

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 . idlist $@9 RIGHT_PARENTHESES $@10 block $@11

    IDENTIFIER  shift, and go to state 163

    $default  reduce using rule 95 (idlist)

    idlist  go to state 175


State 166

   61 methodcall: DOT_DOT IDENTIFIER LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 52
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 176
    objectdef   go to state 36
    const       go to state 39


State 167

   60 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 60 (normcall)


State 168

   53 member: call $@4 LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 53 (member)


State 169

   70 indexedelem: LEFT_CURLY expr COLON expr RIGHT_CURLY .

    $default  reduce using rule 70 (indexedelem)


State 170

   57 call: LEFT_PARENTHESES funcdefstmt RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 57 (call)


State 171

  106 whilestmt_continue: expr $@19 RIGHT_PARENTHESES . $@20 stmt $@21

    $default  reduce using rule 104 ($@20)

    $@20  go to state 177


State 172

  109 forstmt: FOR LEFT_PARENTHESES $@22 elist SEMI_COLON $@23 . forstmt_continue

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    expr              go to state 178
    term              go to state 30
    assignexpr        go to state 31
    primary           go to state 32
    lvalue            go to state 33
    member            go to state 34
    call              go to state 35
    objectdef         go to state 36
    const             go to state 39
    forstmt_continue  go to state 179


State 173

   94 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 180


State 174

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist $@14 . RIGHT_PARENTHESES $@15 block $@16

    RIGHT_PARENTHESES  shift, and go to state 181


State 175

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist . $@9 RIGHT_PARENTHESES $@10 block $@11
   94 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 173

    $default  reduce using rule 77 ($@9)

    $@9  go to state 182


State 176

   61 methodcall: DOT_DOT IDENTIFIER LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   63 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 183
    COMMA              shift, and go to state 98


State 177

  106 whilestmt_continue: expr $@19 RIGHT_PARENTHESES $@20 . stmt $@21

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    BREAK             shift, and go to state 19
    CONTINUE          shift, and go to state 20
    LEFT_CURLY        shift, and go to state 21
    SEMI_COLON        shift, and go to state 22
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    stmt         go to state 184
    expr         go to state 29
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    block        go to state 37
    funcdefstmt  go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmt       go to state 41
    whilestmt    go to state 42
    forstmt      go to state 43
    returnstmt   go to state 44


State 178

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLICATION expr
   19     | expr . DIVISION expr
   20     | expr . PERCENTAGE expr
   21     | expr . GREATER expr
   22     | expr . SMALLER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . SMALLER_EQUAL expr
   25     | expr . EQUAL_EQUAL expr
   26     | expr . NOT_EQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
  115 forstmt_continue: expr . $@24 SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES $@27 stmt $@28

    OR              shift, and go to state 71
    AND             shift, and go to state 72
    EQUAL_EQUAL     shift, and go to state 73
    NOT_EQUAL       shift, and go to state 74
    GREATER         shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    SMALLER         shift, and go to state 77
    SMALLER_EQUAL   shift, and go to state 78
    PLUS            shift, and go to state 79
    MINUS           shift, and go to state 80
    MULTIPLICATION  shift, and go to state 81
    DIVISION        shift, and go to state 82
    PERCENTAGE      shift, and go to state 83

    $default  reduce using rule 110 ($@24)

    $@24  go to state 185


State 179

  109 forstmt: FOR LEFT_PARENTHESES $@22 elist SEMI_COLON $@23 forstmt_continue .

    $default  reduce using rule 109 (forstmt)


State 180

   94 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 94 (idlist)


State 181

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist $@14 RIGHT_PARENTHESES . $@15 block $@16

    $default  reduce using rule 84 ($@15)

    $@15  go to state 186


State 182

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 . RIGHT_PARENTHESES $@10 block $@11

    RIGHT_PARENTHESES  shift, and go to state 187


State 183

   61 methodcall: DOT_DOT IDENTIFIER LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 61 (methodcall)


State 184

  106 whilestmt_continue: expr $@19 RIGHT_PARENTHESES $@20 stmt . $@21

    $default  reduce using rule 105 ($@21)

    $@21  go to state 188


State 185

  115 forstmt_continue: expr $@24 . SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES $@27 stmt $@28

    SEMI_COLON  shift, and go to state 189


State 186

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist $@14 RIGHT_PARENTHESES $@15 . block $@16

    LEFT_CURLY  shift, and go to state 21

    block  go to state 190


State 187

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES . $@10 block $@11

    $default  reduce using rule 78 ($@10)

    $@10  go to state 191


State 188

  106 whilestmt_continue: expr $@19 RIGHT_PARENTHESES $@20 stmt $@21 .

    $default  reduce using rule 106 (whilestmt_continue)


State 189

  115 forstmt_continue: expr $@24 SEMI_COLON . $@25 elist $@26 RIGHT_PARENTHESES $@27 stmt $@28

    $default  reduce using rule 111 ($@25)

    $@25  go to state 192


State 190

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist $@14 RIGHT_PARENTHESES $@15 block . $@16

    $default  reduce using rule 85 ($@16)

    $@16  go to state 193


State 191

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 . block $@11

    LEFT_CURLY  shift, and go to state 21

    block  go to state 194


State 192

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 . elist $@26 RIGHT_PARENTHESES $@27 stmt $@28

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 52
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 195
    objectdef   go to state 36
    const       go to state 39


State 193

   86 funcdefstmt: FUNCTION LEFT_PARENTHESES $@12 $@13 idlist $@14 RIGHT_PARENTHESES $@15 block $@16 .

    $default  reduce using rule 86 (funcdefstmt)


State 194

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 block . $@11

    $default  reduce using rule 79 ($@11)

    $@11  go to state 196


State 195

   63 elist: elist . COMMA expr
  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist . $@26 RIGHT_PARENTHESES $@27 stmt $@28

    COMMA  shift, and go to state 98

    $default  reduce using rule 112 ($@26)

    $@26  go to state 197


State 196

   80 funcdefstmt: FUNCTION IDENTIFIER $@7 LEFT_PARENTHESES $@8 idlist $@9 RIGHT_PARENTHESES $@10 block $@11 .

    $default  reduce using rule 80 (funcdefstmt)


State 197

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist $@26 . RIGHT_PARENTHESES $@27 stmt $@28

    RIGHT_PARENTHESES  shift, and go to state 198


State 198

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES . $@27 stmt $@28

    $default  reduce using rule 113 ($@27)

    $@27  go to state 199


State 199

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES $@27 . stmt $@28

    MINUS             shift, and go to state 4
    NOT               shift, and go to state 5
    PLUS_PLUS         shift, and go to state 6
    MINUS_MINUS       shift, and go to state 7
    LEFT_BRACKET      shift, and go to state 8
    LEFT_PARENTHESES  shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    FOR               shift, and go to state 12
    FUNCTION          shift, and go to state 13
    RETURN            shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    BREAK             shift, and go to state 19
    CONTINUE          shift, and go to state 20
    LEFT_CURLY        shift, and go to state 21
    SEMI_COLON        shift, and go to state 22
    COLON_COLON       shift, and go to state 23
    IDENTIFIER        shift, and go to state 24
    STRING            shift, and go to state 25
    REAL              shift, and go to state 26
    INTEGER           shift, and go to state 27

    stmt         go to state 200
    expr         go to state 29
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    objectdef    go to state 36
    block        go to state 37
    funcdefstmt  go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmt       go to state 41
    whilestmt    go to state 42
    forstmt      go to state 43
    returnstmt   go to state 44


State 200

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES $@27 stmt . $@28

    $default  reduce using rule 114 ($@28)

    $@28  go to state 201


State 201

  115 forstmt_continue: expr $@24 SEMI_COLON $@25 elist $@26 RIGHT_PARENTHESES $@27 stmt $@28 .

    $default  reduce using rule 115 (forstmt_continue)
